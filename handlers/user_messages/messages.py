from aiogram.utils import exceptions

from config_files.config import xprices_channel
from keyboards.reply import reply_keyboards
from keyboards.inline import inline_keyboards
from aiogram import types

from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text

from conductor import dp, bot

from additional.parser import parse_site_xbox_now, search_new_deals
from datetime import datetime
import json
from asyncio import sleep

from aiofiles import os


@dp.message_handler()
@dp.message_handler(Text(equals=['–ù–∞–π—Ç–∏ —Ö–∞–ª—è–≤—É !', '–ê–¥—Ä–µ—Å —Ä–µ–≥–∏–æ–Ω–æ–≤', '–¢–µ—Å—Ç–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞']))
async def start(message: types.Message):
    if message.text == '–ù–∞–π—Ç–∏ —Ö–∞–ª—è–≤—É !':
        await message.reply('–ú–∏–Ω—É—Ç–∫—É, –ø—Ä–æ–≤–µ—Ä—è—é...')
        result_from_parsing = parser()
        day_today = datetime.now().strftime('%d-%m-%Y')
        mess_td = '–°–æ—Å—Ç–æ—è–Ω–∏–µ–º –Ω–∞ ' + f'<b>{day_today}</b>' + ' –Ω–∞—à–µ–ª —Ç–∞–∫—É—é —Ö–∞–ª—è–≤—É :\n<i>–î–ª—è –∏—Ö –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–π–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ –∏ –∑–∞–±–µ—Ä–∏ –∏—Ö</i>\n\n'

        pretty_message = mess_td + " ,  ".join(f'<a href="{value}">{key}</a>' for key, value in result_from_parsing.items())
        await message.answer(pretty_message, parse_mode='HTML', disable_notification=True)
    elif message.text == '–ê–¥—Ä–µ—Å —Ä–µ–≥–∏–æ–Ω–æ–≤':
        await message.reply('–í—ã–±–µ—Ä–∏ —Ä–µ–≥–∏–æ–Ω –Ω–∏–∂–µ üëá', reply_markup=inline_keyboards.inline_region_kb())
    elif message.text == '–¢–µ—Å—Ç–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞':
        await message.answer('–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é ...')

        checking_for_new_news = search_new_deals()
        if checking_for_new_news == True:
            file = parse_site_xbox_now()

            with open(f'{file}', encoding="utf-8") as parse_result:
                data_file = json.load(parse_result)

            for index, rows in enumerate(data_file):
                print(rows)
                print(f'index is : {index}')
                title = rows.get('game_name')
                img = rows.get('img')
                price = rows.get('price')
                region = rows.get('region')
                url = rows.get('url')
                # f'–†–µ–≥–∏–æ–Ω : <b>{price[0]}</b>\n\n' \
                message = f'–ù–∞–∑–≤–∞–Ω–∏–µ –∏–≥—Ä—ã : <b>{title}</b> \n\n' \
                          f'–°–∞–º–∞—è –Ω–∏–∑–∫–∞—è —Ü–µ–Ω–∞ : <b>{price}</b> üî•\n' \
                          f'–†–µ–≥–∏–æ–Ω —Å —Ç–∞–∫–æ–π —Ü–µ–Ω–æ–π : <b>{region}</b>\n\n' \
                          f'<a href="{url}">–£–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ –æ —Ü–µ–Ω–∞—Ö  üëÄ</a>'
                await bot.send_photo(chat_id=xprices_channel, photo=img, caption=message, disable_notification=False)

                if index % 15 == 0:
                    #await bot.send_message(chat_id=xprices_channel, text='–°–ø–ª—é 35 —Å–µ–∫')
                    await sleep(40)
    else:
        await message.answer('–Ø –ø–æ–∫–∞ –Ω–µ –∑–Ω–∞—é –∫–∞–∫ –Ω–∞ —ç—Ç–æ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å :(', reply_markup=types.ReplyKeyboardRemove())
